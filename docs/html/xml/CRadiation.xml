<?xml version='1.0' encoding='utf-8'?>
<class id="CRadiation" name="CRadiation" xmlns="http://jessevdk.github.com/cldoc/1.0">
  <field id="CRadiation::atomicDBFilename" name="atomicDBFilename">
    <brief>Atomic database filename</brief>
    <type class="array" size="512">
      <type builtin="yes" name="char" />
    </type>
  </field>
  <constructor id="CRadiation::CRadiation" name="CRadiation">
    <brief>Constructor</brief>
    <argument id="CRadiation::CRadiation::szFilename" name="szFilename">
      <type builtin="yes" name="char" qualifier="*" />
    </argument>
    <argument id="CRadiation::CRadiation::doEmissCalc" name="doEmissCalc">
      <type builtin="yes" name="bool" />
    </argument>
  </constructor>
  <destructor id="CRadiation::~CRadiation" name="~CRadiation">
    <brief>Destructor</brief>
  </destructor>
  <method id="CRadiation::GetAbundance" name="GetAbundance">
    <brief>Function to return the abundance of a specified element</brief>
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="CRadiation::GetAbundance::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
  </method>
  <method id="CRadiation::GetAlldnibydt" name="GetAlldnibydt">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::GetAlldnibydt::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::ppni0" name="ppni0">
      <type builtin="yes" name="double" qualifier="**" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::ppni1" name="ppni1">
      <type builtin="yes" name="double" qualifier="**" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::ppni2" name="ppni2">
      <type builtin="yes" name="double" qualifier="**" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::ppni3" name="ppni3">
      <type builtin="yes" name="double" qualifier="**" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::ppni4" name="ppni4">
      <type builtin="yes" name="double" qualifier="**" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::s" name="s">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::s_pos" name="s_pos">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::pv" name="pv">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::delta_s" name="delta_s">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::ppdnibydt" name="ppdnibydt">
      <type builtin="yes" name="double" qualifier="**" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::pTimeScale" name="pTimeScale">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
  </method>
  <method id="CRadiation::GetAlldnibydt" name="GetAlldnibydt">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::GetAlldnibydt::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::ppni" name="ppni">
      <type builtin="yes" name="double" qualifier="**" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::ppdnibydt" name="ppdnibydt">
      <type builtin="yes" name="double" qualifier="**" />
    </argument>
    <argument id="CRadiation::GetAlldnibydt::pTimeScale" name="pTimeScale">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
  </method>
  <method id="CRadiation::Getdnibydt" name="Getdnibydt">
    <brief>Functions to calculate the rate of change with respect to time of the fractional</brief>
    <doc>populations of the ions and the characteristic time-scale
Overload for use in IonPopSolver code</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::Getdnibydt::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::Getdnibydt::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::Getdnibydt::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pni0" name="pni0">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pni1" name="pni1">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pni2" name="pni2">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pni3" name="pni3">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pni4" name="pni4">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::s" name="s">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::s_pos" name="s_pos">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pv" name="pv">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::delta_s" name="delta_s">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pdnibydt" name="pdnibydt">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pTimeScale" name="pTimeScale">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
  </method>
  <method id="CRadiation::Getdnibydt" name="Getdnibydt">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::Getdnibydt::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::Getdnibydt::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::Getdnibydt::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pni" name="pni">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pdnibydt" name="pdnibydt">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Getdnibydt::pTimeScale" name="pTimeScale">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
  </method>
  <method id="CRadiation::GetEquilIonFrac" name="GetEquilIonFrac">
    <brief>Function to return the ion fractional populations of a particular element at a</brief>
    <doc>specified temperature and density in equilibrium</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::GetEquilIonFrac::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::GetEquilIonFrac::pni" name="pni">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::GetEquilIonFrac::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::GetEquilIonFrac" name="GetEquilIonFrac">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::GetEquilIonFrac::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::GetEquilIonFrac::pni" name="pni">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::GetEquilIonFrac::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetEquilIonFrac::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::GetFreeFreeRad" name="GetFreeFreeRad">
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="CRadiation::GetFreeFreeRad::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetFreeFreeRad::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::GetPowerLawRad" name="GetPowerLawRad">
    <brief>Functions to calculate energy radiated based upon power-laws</brief>
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="CRadiation::GetPowerLawRad::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetPowerLawRad::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::GetRadiation" name="GetRadiation">
    <brief>Functions to calculate the amount of energy radiated in equilibrium</brief>
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="CRadiation::GetRadiation::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::GetRadiation::iIon" name="iIon">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::GetRadiation::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetRadiation::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::GetRadiation" name="GetRadiation">
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="CRadiation::GetRadiation::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::GetRadiation::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetRadiation::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::GetRadiation" name="GetRadiation">
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="CRadiation::GetRadiation::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetRadiation::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::GetRadiation" name="GetRadiation">
    <brief>Functions to calculate the amount of energy radiated in nonequilibrium</brief>
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="CRadiation::GetRadiation::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::GetRadiation::iIon" name="iIon">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::GetRadiation::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetRadiation::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetRadiation::ni" name="ni">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::GetRadiation" name="GetRadiation">
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="CRadiation::GetRadiation::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::GetRadiation::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetRadiation::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetRadiation::pni" name="pni">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
  </method>
  <method id="CRadiation::GetRadiation" name="GetRadiation">
    <return>
      <type builtin="yes" name="double" />
    </return>
    <argument id="CRadiation::GetRadiation::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetRadiation::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::GetRadiation::ppni" name="ppni">
      <type builtin="yes" name="double" qualifier="**" />
    </argument>
  </method>
  <method id="CRadiation::Normalise" name="Normalise">
    <brief>Function to normalise the sum total of the ion fractional populations to 1</brief>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::Normalise::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::Normalise::pni" name="pni">
      <type builtin="yes" name="double" qualifier="*" />
    </argument>
    <argument id="CRadiation::Normalise::fTotal" name="fTotal">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::pGetAtomicNumbers" name="pGetAtomicNumbers">
    <brief>Function to return a list of the atomic numbers of the elements comprising the radiation model</brief>
    <return>
      <type builtin="yes" name="int" qualifier="*" />
    </return>
    <argument id="CRadiation::pGetAtomicNumbers::iNumElements" name="iNumElements">
      <type builtin="yes" name="int" qualifier="*" />
    </argument>
  </method>
  <method id="CRadiation::WriteEquilIonFracToFile" name="WriteEquilIonFracToFile">
    <brief>Functions to write either a given set of ion fractional populations or all</brief>
    <doc>fractional populations to a data file</doc>
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::WriteEquilIonFracToFile::pFile" name="pFile">
      <type builtin="yes" name="void" qualifier="*" />
    </argument>
    <argument id="CRadiation::WriteEquilIonFracToFile::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::WriteEquilIonFracToFile::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::WriteEquilIonFracToFile" name="WriteEquilIonFracToFile">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::WriteEquilIonFracToFile::pFile" name="pFile">
      <type builtin="yes" name="void" qualifier="*" />
    </argument>
    <argument id="CRadiation::WriteEquilIonFracToFile::iZ" name="iZ">
      <type builtin="yes" name="int" />
    </argument>
    <argument id="CRadiation::WriteEquilIonFracToFile::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::WriteEquilIonFracToFile::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::WriteEquilIonFracToFile" name="WriteEquilIonFracToFile">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::WriteEquilIonFracToFile::pFile" name="pFile">
      <type builtin="yes" name="void" qualifier="*" />
    </argument>
    <argument id="CRadiation::WriteEquilIonFracToFile::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
  </method>
  <method id="CRadiation::WriteEquilIonFracToFile" name="WriteEquilIonFracToFile">
    <return>
      <type builtin="yes" name="void" />
    </return>
    <argument id="CRadiation::WriteEquilIonFracToFile::pFile" name="pFile">
      <type builtin="yes" name="void" qualifier="*" />
    </argument>
    <argument id="CRadiation::WriteEquilIonFracToFile::flog_10T" name="flog_10T">
      <type builtin="yes" name="double" />
    </argument>
    <argument id="CRadiation::WriteEquilIonFracToFile::flog_10n" name="flog_10n">
      <type builtin="yes" name="double" />
    </argument>
  </method>
</class>
